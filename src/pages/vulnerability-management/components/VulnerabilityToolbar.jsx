import React, { useState } from 'react';
import Icon from '../../../components/AppIcon';
import Button from '../../../components/ui/Button';
import Select from '../../../components/ui/Select';

const VulnerabilityToolbar = ({ 
  selectedCount, 
  onScheduleScan, 
  onExport, 
  onBulkAction,
  onRefresh,
  lastScanTime 
}) => {
  const [showScheduler, setShowScheduler] = useState(false);
  const [exportFormat, setExportFormat] = useState('pdf');
  const [bulkAction, setBulkAction] = useState('');

  const exportOptions = [
    { value: 'pdf', label: 'Export as PDF' },
    { value: 'csv', label: 'Export as CSV' },
    { value: 'excel', label: 'Export as Excel' }
  ];

  const bulkActionOptions = [
    { value: '', label: 'Bulk Actions', disabled: true },
    { value: 'resolve', label: 'Mark as Resolved' },
    { value: 'ignore', label: 'Mark as Ignored' },
    { value: 'assign', label: 'Assign to Team Member' },
    { value: 'priority', label: 'Change Priority' }
  ];

  const scheduleOptions = [
    { value: 'daily', label: 'Daily at 2:00 AM' },
    { value: 'weekly', label: 'Weekly on Sunday' },
    { value: 'monthly', label: 'Monthly on 1st' },
    { value: 'custom', label: 'Custom Schedule' }
  ];

  const handleExport = () => {
    onExport(exportFormat);
  };

  const handleBulkAction = (action) => {
    setBulkAction(action);
    if (action && selectedCount > 0) {
      onBulkAction(action);
    }
  };

  const handleScheduleScan = (schedule) => {
    onScheduleScan(schedule);
    setShowScheduler(false);
  };

  const formatLastScanTime = (timestamp) => {
    if (!timestamp) return 'Never';
    const date = new Date(timestamp);
    const now = new Date();
    const diffHours = Math.floor((now - date) / (1000 * 60 * 60));
    
    if (diffHours < 1) return 'Just now';
    if (diffHours < 24) return `${diffHours}h ago`;
    return date?.toLocaleDateString();
  };

  return (
    <div className="bg-card border border-border rounded-lg p-4">
      <div className="flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0">
        {/* Left Section - Scan Info & Actions */}
        <div className="flex flex-col sm:flex-row sm:items-center space-y-3 sm:space-y-0 sm:space-x-4">
          <div className="flex items-center space-x-3">
            <div className="flex items-center space-x-2">
              <Icon name="Shield" size={20} className="text-primary" />
              <div>
                <h3 className="text-lg font-semibold text-foreground">Vulnerability Scanner</h3>
                <p className="text-sm text-muted-foreground">
                  Last scan: {formatLastScanTime(lastScanTime)}
                </p>
              </div>
            </div>
          </div>

          <div className="flex items-center space-x-2">
            <Button
              variant="default"
              onClick={() => onRefresh()}
              iconName="RotateCcw"
              iconPosition="left"
            >
              Scan Now
            </Button>
            
            <div className="relative">
              <Button
                variant="outline"
                onClick={() => setShowScheduler(!showScheduler)}
                iconName="Calendar"
                iconPosition="left"
              >
                Schedule
              </Button>
              
              {showScheduler && (
                <div className="absolute top-full left-0 mt-2 w-64 bg-popover border border-border rounded-lg shadow-lg z-50">
                  <div className="p-4">
                    <h4 className="text-sm font-semibold text-foreground mb-3">Schedule Scans</h4>
                    <div className="space-y-2">
                      {scheduleOptions?.map((option) => (
                        <button
                          key={option?.value}
                          onClick={() => handleScheduleScan(option?.value)}
                          className="w-full text-left p-2 rounded hover:bg-muted/50 transition-colors text-sm text-foreground"
                        >
                          {option?.label}
                        </button>
                      ))}
                    </div>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>

        {/* Right Section - Export & Bulk Actions */}
        <div className="flex flex-col sm:flex-row sm:items-center space-y-3 sm:space-y-0 sm:space-x-3">
          {selectedCount > 0 && (
            <div className="flex items-center space-x-3">
              <span className="text-sm text-muted-foreground">
                {selectedCount} selected
              </span>
              <Select
                options={bulkActionOptions}
                value={bulkAction}
                onChange={handleBulkAction}
                placeholder="Bulk Actions"
                className="w-40"
              />
            </div>
          )}

          <div className="flex items-center space-x-2">
            <Select
              options={exportOptions}
              value={exportFormat}
              onChange={setExportFormat}
              className="w-36"
            />
            <Button
              variant="outline"
              onClick={handleExport}
              iconName="Download"
              iconPosition="left"
            >
              Export
            </Button>
          </div>
        </div>
      </div>
      {/* AI Insights Banner */}
      <div className="mt-4 bg-accent/5 border border-accent/20 rounded-lg p-4">
        <div className="flex items-start space-x-3">
          <Icon name="Sparkles" size={20} className="text-accent mt-0.5" />
          <div className="flex-1">
            <h4 className="text-sm font-semibold text-foreground mb-1">
              AI Security Insights
            </h4>
            <p className="text-sm text-muted-foreground">
              Based on your current vulnerability landscape, we recommend prioritizing 
              critical RCE vulnerabilities affecting your Windows systems. 
              <button className="text-accent hover:text-accent/80 ml-1 underline">
                View detailed analysis
              </button>
            </p>
          </div>
          <Button variant="ghost" size="sm">
            <Icon name="X" size={16} />
          </Button>
        </div>
      </div>
    </div>
  );
};

export default VulnerabilityToolbar;