import React, { useState } from 'react';
import Icon from '../../../components/AppIcon';
import Button from '../../../components/ui/Button';

const VulnerabilityDetailsModal = ({ vulnerability, isOpen, onClose, onStatusUpdate }) => {
  const [activeTab, setActiveTab] = useState('overview');

  if (!isOpen || !vulnerability) return null;

  const getSeverityColor = (severity) => {
    switch (severity?.toLowerCase()) {
      case 'critical':
        return 'text-error bg-error/10 border-error/20';
      case 'high':
        return 'text-warning bg-warning/10 border-warning/20';
      case 'medium':
        return 'text-accent bg-accent/10 border-accent/20';
      case 'low':
        return 'text-success bg-success/10 border-success/20';
      default:
        return 'text-muted-foreground bg-muted/10 border-border';
    }
  };

  const getSeverityIcon = (severity) => {
    switch (severity?.toLowerCase()) {
      case 'critical':
        return 'AlertTriangle';
      case 'high':
        return 'AlertCircle';
      case 'medium':
        return 'Info';
      case 'low':
        return 'CheckCircle';
      default:
        return 'Circle';
    }
  };

  const tabs = [
    { id: 'overview', label: 'Overview', icon: 'Info' },
    { id: 'technical', label: 'Technical Details', icon: 'Code' },
    { id: 'remediation', label: 'Remediation', icon: 'Wrench' },
    { id: 'timeline', label: 'Timeline', icon: 'Clock' }
  ];

  const handleStatusUpdate = (newStatus) => {
    onStatusUpdate(vulnerability?.id, newStatus);
  };

  const renderOverviewTab = () => (
    <div className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="space-y-4">
          <div>
            <h4 className="text-sm font-semibold text-foreground mb-2">Vulnerability Details</h4>
            <div className="space-y-3">
              <div className="flex justify-between">
                <span className="text-sm text-muted-foreground">CVE ID:</span>
                <span className="text-sm font-mono text-foreground">{vulnerability?.cve}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-sm text-muted-foreground">CVSS Score:</span>
                <span className="text-sm font-semibold text-foreground">{vulnerability?.cvssScore}/10</span>
              </div>
              <div className="flex justify-between">
                <span className="text-sm text-muted-foreground">Risk Score:</span>
                <span className="text-sm font-semibold text-foreground">{vulnerability?.riskScore}/10</span>
              </div>
              <div className="flex justify-between">
                <span className="text-sm text-muted-foreground">Discovered:</span>
                <span className="text-sm text-foreground">{vulnerability?.discoveredDate}</span>
              </div>
            </div>
          </div>

          <div>
            <h4 className="text-sm font-semibold text-foreground mb-2">Impact Assessment</h4>
            <div className="space-y-2">
              <div className="flex items-center space-x-2">
                <Icon name="Monitor" size={16} className="text-muted-foreground" />
                <span className="text-sm text-foreground">{vulnerability?.affectedDevices} devices affected</span>
              </div>
              <div className="flex items-center space-x-2">
                <Icon name="Users" size={16} className="text-muted-foreground" />
                <span className="text-sm text-foreground">{vulnerability?.affectedUsers || 'Unknown'} users potentially impacted</span>
              </div>
              <div className="flex items-center space-x-2">
                <Icon name="DollarSign" size={16} className="text-muted-foreground" />
                <span className="text-sm text-foreground">Estimated cost: ${vulnerability?.estimatedCost || 'N/A'}</span>
              </div>
            </div>
          </div>
        </div>

        <div className="space-y-4">
          <div>
            <h4 className="text-sm font-semibold text-foreground mb-2">Exploitation Likelihood</h4>
            <div className="space-y-3">
              <div className="flex items-center justify-between">
                <span className="text-sm text-muted-foreground">Public Exploit:</span>
                <span className={`text-sm font-medium ${vulnerability?.publicExploit ? 'text-error' : 'text-success'}`}>
                  {vulnerability?.publicExploit ? 'Available' : 'Not Available'}
                </span>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-sm text-muted-foreground">Weaponization:</span>
                <span className={`text-sm font-medium ${vulnerability?.weaponized ? 'text-error' : 'text-warning'}`}>
                  {vulnerability?.weaponized ? 'Active' : 'Potential'}
                </span>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-sm text-muted-foreground">Attack Complexity:</span>
                <span className="text-sm text-foreground">{vulnerability?.attackComplexity || 'Medium'}</span>
              </div>
            </div>
          </div>

          <div>
            <h4 className="text-sm font-semibold text-foreground mb-2">Affected Software</h4>
            <div className="space-y-2">
              {vulnerability?.affectedSoftware?.map((software, index) => (
                <div key={index} className="flex items-center space-x-2">
                  <Icon name="Package" size={14} className="text-muted-foreground" />
                  <span className="text-sm text-foreground">{software}</span>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>

      <div>
        <h4 className="text-sm font-semibold text-foreground mb-3">Description</h4>
        <p className="text-sm text-muted-foreground leading-relaxed">{vulnerability?.description}</p>
      </div>
    </div>
  );

  const renderTechnicalTab = () => (
    <div className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <h4 className="text-sm font-semibold text-foreground mb-3">CVSS Metrics</h4>
          <div className="bg-muted/20 rounded-lg p-4 space-y-3">
            <div className="flex justify-between">
              <span className="text-sm text-muted-foreground">Attack Vector:</span>
              <span className="text-sm text-foreground">{vulnerability?.attackVector || 'Network'}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-sm text-muted-foreground">Attack Complexity:</span>
              <span className="text-sm text-foreground">{vulnerability?.attackComplexity || 'Low'}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-sm text-muted-foreground">Privileges Required:</span>
              <span className="text-sm text-foreground">{vulnerability?.privilegesRequired || 'None'}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-sm text-muted-foreground">User Interaction:</span>
              <span className="text-sm text-foreground">{vulnerability?.userInteraction || 'None'}</span>
            </div>
          </div>
        </div>

        <div>
          <h4 className="text-sm font-semibold text-foreground mb-3">Impact Metrics</h4>
          <div className="bg-muted/20 rounded-lg p-4 space-y-3">
            <div className="flex justify-between">
              <span className="text-sm text-muted-foreground">Confidentiality:</span>
              <span className="text-sm text-foreground">{vulnerability?.confidentialityImpact || 'High'}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-sm text-muted-foreground">Integrity:</span>
              <span className="text-sm text-foreground">{vulnerability?.integrityImpact || 'High'}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-sm text-muted-foreground">Availability:</span>
              <span className="text-sm text-foreground">{vulnerability?.availabilityImpact || 'High'}</span>
            </div>
          </div>
        </div>
      </div>

      <div>
        <h4 className="text-sm font-semibold text-foreground mb-3">Technical References</h4>
        <div className="space-y-2">
          {(vulnerability?.references || [
            'https://nvd.nist.gov/vuln/detail/' + vulnerability?.cve,
            'https://cve.mitre.org/cgi-bin/cvename.cgi?name=' + vulnerability?.cve
          ])?.map((ref, index) => (
            <div key={index} className="flex items-center space-x-2">
              <Icon name="ExternalLink" size={14} className="text-muted-foreground" />
              <a href={ref} target="_blank" rel="noopener noreferrer" className="text-sm text-primary hover:text-primary/80">
                {ref}
              </a>
            </div>
          ))}
        </div>
      </div>
    </div>
  );

  const renderRemediationTab = () => (
    <div className="space-y-6">
      <div className="bg-accent/5 border border-accent/20 rounded-lg p-6">
        <div className="flex items-start space-x-3">
          <Icon name="Sparkles" size={24} className="text-accent mt-1" />
          <div className="flex-1">
            <h4 className="text-lg font-semibold text-foreground mb-3">AI-Generated Remediation Plan</h4>
            <p className="text-sm text-muted-foreground mb-4">{vulnerability?.aiRecommendation}</p>
            
            <div className="space-y-4">
              <div>
                <h5 className="text-sm font-semibold text-foreground mb-2">Immediate Actions</h5>
                <ul className="space-y-2">
                  {(vulnerability?.immediateActions || [
                    'Apply security patch immediately',
                    'Isolate affected systems if patch unavailable',
                    'Monitor for exploitation attempts'
                  ])?.map((action, index) => (
                    <li key={index} className="flex items-start space-x-2">
                      <Icon name="CheckCircle" size={16} className="text-success mt-0.5" />
                      <span className="text-sm text-foreground">{action}</span>
                    </li>
                  ))}
                </ul>
              </div>

              <div>
                <h5 className="text-sm font-semibold text-foreground mb-2">Long-term Recommendations</h5>
                <ul className="space-y-2">
                  {(vulnerability?.longTermActions || [
                    'Implement automated patch management',
                    'Enhance network segmentation',
                    'Regular vulnerability assessments'
                  ])?.map((action, index) => (
                    <li key={index} className="flex items-start space-x-2">
                      <Icon name="Clock" size={16} className="text-accent mt-0.5" />
                      <span className="text-sm text-foreground">{action}</span>
                    </li>
                  ))}
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <h4 className="text-sm font-semibold text-foreground mb-3">Available Patches</h4>
          <div className="space-y-3">
            {(vulnerability?.patches || [
              { name: 'Security Update KB5001234', version: '1.2.3', status: 'Available' },
              { name: 'Hotfix Package', version: '1.2.4', status: 'Testing' }
            ])?.map((patch, index) => (
              <div key={index} className="flex items-center justify-between p-3 bg-muted/20 rounded-lg">
                <div>
                  <div className="text-sm font-medium text-foreground">{patch?.name}</div>
                  <div className="text-xs text-muted-foreground">Version {patch?.version}</div>
                </div>
                <span className={`text-xs px-2 py-1 rounded-full ${
                  patch?.status === 'Available' ? 'bg-success/10 text-success' : 'bg-warning/10 text-warning'
                }`}>
                  {patch?.status}
                </span>
              </div>
            ))}
          </div>
        </div>

        <div>
          <h4 className="text-sm font-semibold text-foreground mb-3">Workarounds</h4>
          <div className="space-y-3">
            {(vulnerability?.workarounds || [
              'Disable affected service temporarily',
              'Apply firewall rules to block exploitation',
              'Enable additional monitoring'
            ])?.map((workaround, index) => (
              <div key={index} className="flex items-start space-x-2 p-3 bg-muted/20 rounded-lg">
                <Icon name="Shield" size={16} className="text-warning mt-0.5" />
                <span className="text-sm text-foreground">{workaround}</span>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );

  const renderTimelineTab = () => (
    <div className="space-y-6">
      <div className="space-y-4">
        {(vulnerability?.timeline || [
          {
            date: '2025-01-15',
            event: 'Vulnerability discovered during automated scan',
            type: 'discovery',
            user: 'System Scanner'
          },
          {
            date: '2025-01-15',
            event: 'AI analysis completed - High risk assessment',
            type: 'analysis',
            user: 'AI Engine'
          },
          {
            date: '2025-01-16',
            event: 'Assigned to Security Team for review',
            type: 'assignment',
            user: 'Sarah Johnson'
          },
          {
            date: '2025-01-17',
            event: 'Patch testing initiated',
            type: 'testing',
            user: 'IT Team'
          }
        ])?.map((event, index) => (
          <div key={index} className="flex items-start space-x-4">
            <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
              event?.type === 'discovery' ? 'bg-primary/10 text-primary' :
              event?.type === 'analysis' ? 'bg-accent/10 text-accent' :
              event?.type === 'assignment'? 'bg-warning/10 text-warning' : 'bg-success/10 text-success'
            }`}>
              <Icon 
                name={
                  event?.type === 'discovery' ? 'Search' :
                  event?.type === 'analysis' ? 'Sparkles' :
                  event?.type === 'assignment' ? 'User' : 'CheckCircle'
                } 
                size={16} 
              />
            </div>
            <div className="flex-1">
              <div className="flex items-center justify-between">
                <h5 className="text-sm font-medium text-foreground">{event?.event}</h5>
                <span className="text-xs text-muted-foreground">{event?.date}</span>
              </div>
              <p className="text-xs text-muted-foreground mt-1">by {event?.user}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  );

  return (
    <div className="fixed inset-0 bg-background/80 backdrop-blur-sm z-50 flex items-center justify-center p-4">
      <div className="bg-card border border-border rounded-lg shadow-lg w-full max-w-4xl max-h-[90vh] overflow-hidden">
        {/* Header */}
        <div className="flex items-center justify-between p-6 border-b border-border">
          <div className="flex items-center space-x-4">
            <span className={`inline-flex items-center px-3 py-1.5 rounded-full text-sm font-medium border ${getSeverityColor(vulnerability?.severity)}`}>
              <Icon name={getSeverityIcon(vulnerability?.severity)} size={16} className="mr-2" />
              {vulnerability?.severity}
            </span>
            <div>
              <h2 className="text-xl font-semibold text-foreground">{vulnerability?.cve}</h2>
              <p className="text-sm text-muted-foreground">{vulnerability?.title || 'Vulnerability Details'}</p>
            </div>
          </div>
          <div className="flex items-center space-x-2">
            <Button
              variant="outline"
              onClick={() => handleStatusUpdate('resolved')}
              iconName="CheckCircle"
              iconPosition="left"
            >
              Mark Resolved
            </Button>
            <Button variant="ghost" onClick={onClose}>
              <Icon name="X" size={20} />
            </Button>
          </div>
        </div>

        {/* Tabs */}
        <div className="border-b border-border">
          <nav className="flex space-x-8 px-6">
            {tabs?.map((tab) => (
              <button
                key={tab?.id}
                onClick={() => setActiveTab(tab?.id)}
                className={`flex items-center space-x-2 py-4 border-b-2 transition-colors ${
                  activeTab === tab?.id
                    ? 'border-primary text-primary' :'border-transparent text-muted-foreground hover:text-foreground'
                }`}
              >
                <Icon name={tab?.icon} size={16} />
                <span className="text-sm font-medium">{tab?.label}</span>
              </button>
            ))}
          </nav>
        </div>

        {/* Content */}
        <div className="p-6 overflow-y-auto max-h-[60vh]">
          {activeTab === 'overview' && renderOverviewTab()}
          {activeTab === 'technical' && renderTechnicalTab()}
          {activeTab === 'remediation' && renderRemediationTab()}
          {activeTab === 'timeline' && renderTimelineTab()}
        </div>
      </div>
    </div>
  );
};

export default VulnerabilityDetailsModal;