import React, { useState } from 'react';
import Icon from '../../../components/AppIcon';
import Button from '../../../components/ui/Button';
import { Checkbox } from '../../../components/ui/Checkbox';

const VulnerabilityMobileCard = ({ 
  vulnerability, 
  isSelected, 
  onSelectionChange, 
  onCardClick 
}) => {
  const [isExpanded, setIsExpanded] = useState(false);

  const getSeverityColor = (severity) => {
    switch (severity?.toLowerCase()) {
      case 'critical':
        return 'text-error bg-error/10 border-error/20';
      case 'high':
        return 'text-warning bg-warning/10 border-warning/20';
      case 'medium':
        return 'text-accent bg-accent/10 border-accent/20';
      case 'low':
        return 'text-success bg-success/10 border-success/20';
      default:
        return 'text-muted-foreground bg-muted/10 border-border';
    }
  };

  const getSeverityIcon = (severity) => {
    switch (severity?.toLowerCase()) {
      case 'critical':
        return 'AlertTriangle';
      case 'high':
        return 'AlertCircle';
      case 'medium':
        return 'Info';
      case 'low':
        return 'CheckCircle';
      default:
        return 'Circle';
    }
  };

  const getStatusColor = (status) => {
    switch (status?.toLowerCase()) {
      case 'open':
        return 'text-error bg-error/10';
      case 'in-progress':
        return 'text-warning bg-warning/10';
      case 'resolved':
        return 'text-success bg-success/10';
      case 'ignored':
        return 'text-muted-foreground bg-muted/10';
      default:
        return 'text-muted-foreground bg-muted/10';
    }
  };

  return (
    <div className="bg-card border border-border rounded-lg p-4 space-y-4">
      {/* Header */}
      <div className="flex items-start justify-between">
        <div className="flex items-start space-x-3 flex-1">
          <Checkbox
            checked={isSelected}
            onChange={(e) => onSelectionChange(vulnerability?.id, e?.target?.checked)}
          />
          <div className="flex-1 min-w-0">
            <button
              onClick={() => onCardClick(vulnerability)}
              className="text-primary hover:text-primary/80 font-mono text-sm transition-colors"
            >
              {vulnerability?.cve}
            </button>
            <div className="flex items-center space-x-2 mt-1">
              <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium border ${getSeverityColor(vulnerability?.severity)}`}>
                <Icon name={getSeverityIcon(vulnerability?.severity)} size={10} className="mr-1" />
                {vulnerability?.severity}
              </span>
              <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(vulnerability?.status)}`}>
                {vulnerability?.status}
              </span>
            </div>
          </div>
        </div>
        <button
          onClick={() => setIsExpanded(!isExpanded)}
          className="p-1 rounded hover:bg-muted/50 transition-colors"
        >
          <Icon 
            name={isExpanded ? "ChevronUp" : "ChevronDown"} 
            size={16} 
            className="text-muted-foreground" 
          />
        </button>
      </div>
      {/* Key Metrics */}
      <div className="grid grid-cols-2 gap-4">
        <div className="space-y-1">
          <div className="text-xs text-muted-foreground">Risk Score</div>
          <div className="flex items-center space-x-2">
            <div className="w-12 bg-muted rounded-full h-1.5">
              <div 
                className={`h-1.5 rounded-full ${
                  vulnerability?.riskScore >= 8 ? 'bg-error' :
                  vulnerability?.riskScore >= 6 ? 'bg-warning' :
                  vulnerability?.riskScore >= 4 ? 'bg-accent' : 'bg-success'
                }`}
                style={{ width: `${vulnerability?.riskScore * 10}%` }}
              />
            </div>
            <span className="text-sm font-medium text-foreground">{vulnerability?.riskScore}/10</span>
          </div>
        </div>
        <div className="space-y-1">
          <div className="text-xs text-muted-foreground">Affected Devices</div>
          <div className="flex items-center space-x-1">
            <Icon name="Monitor" size={14} className="text-muted-foreground" />
            <span className="text-sm font-medium text-foreground">{vulnerability?.affectedDevices}</span>
          </div>
        </div>
      </div>
      {/* Discovered Date */}
      <div className="flex items-center justify-between text-xs text-muted-foreground">
        <span>Discovered: {vulnerability?.discoveredDate}</span>
      </div>
      {/* Expanded Content */}
      {isExpanded && (
        <div className="border-t border-border pt-4 space-y-4">
          <div>
            <h4 className="text-sm font-semibold text-foreground mb-2">Description</h4>
            <p className="text-sm text-muted-foreground">{vulnerability?.description}</p>
          </div>

          <div>
            <h4 className="text-sm font-semibold text-foreground mb-2">Affected Software</h4>
            <div className="space-y-1">
              {vulnerability?.affectedSoftware?.slice(0, 3)?.map((software, index) => (
                <div key={index} className="flex items-center space-x-2">
                  <Icon name="Package" size={12} className="text-muted-foreground" />
                  <span className="text-xs text-foreground">{software}</span>
                </div>
              ))}
              {vulnerability?.affectedSoftware?.length > 3 && (
                <div className="text-xs text-muted-foreground">
                  +{vulnerability?.affectedSoftware?.length - 3} more
                </div>
              )}
            </div>
          </div>

          <div className="bg-accent/5 border border-accent/20 rounded-lg p-3">
            <h4 className="text-sm font-semibold text-foreground mb-2 flex items-center">
              <Icon name="Sparkles" size={14} className="mr-2 text-accent" />
              AI Recommendation
            </h4>
            <p className="text-xs text-muted-foreground mb-3">{vulnerability?.aiRecommendation}</p>
            <div className="flex space-x-2">
              <Button variant="outline" size="sm" className="text-xs">
                <Icon name="Download" size={12} className="mr-1" />
                Patch
              </Button>
              <Button variant="ghost" size="sm" className="text-xs">
                <Icon name="ExternalLink" size={12} className="mr-1" />
                Details
              </Button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default VulnerabilityMobileCard;